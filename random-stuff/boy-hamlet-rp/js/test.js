const words = [ // list of all hamlet words in [word, frequency] form
    ["the", 1092],
    ["and", 981],
    ["to", 732],
    ["of", 668],
    ["you", 553],
    ["my", 516],
    ["hamlet", 459],
    ["in", 433],
    ["it", 418],
    ["that", 388],
    ["is", 341],
    ["not", 312],
    ["this", 299],
    ["his", 297],
    ["with", 269],
    ["but", 268],
    ["for", 247],
    ["your", 242],
    ["me", 236],
    ["lord", 221],
    ["be", 221],
    ["as", 220],
    ["he", 218],
    ["what", 203],
    ["so", 197],
    ["king", 195],
    ["him", 195],
    ["have", 180],
    ["will", 170],
    ["horatio", 155],
    ["do", 149],
    ["no", 143],
    ["we", 139],
    ["are", 130],
    ["on", 129],
    ["all", 120],
    ["queen", 119],
    ["our", 119],
    ["polonius", 117],
    ["by", 116],
    ["shall", 114],
    ["if", 114],
    ["or", 113],
    ["good", 106],
    ["come", 105],
    ["laertes", 104],
    ["thou", 103],
    ["they", 102],
    ["now", 97],
    ["more", 97],
    ["from", 96],
    ["let", 94],
    ["her", 91],
    ["how", 89],
    ["at", 87],
    ["thy", 86],
    ["ophelia", 85],
    ["was", 82],
    ["most", 82],
    ["would", 80],
    ["like", 80],
    ["there", 77],
    ["rosencrantz", 77],
    ["well", 76],
    ["them", 75],
    ["know", 75],
    ["sir", 74],
    ["\'tis", 74],
    ["may", 71],
    ["us", 70],
    ["go", 70],
    ["enter", 67],
    ["love", 66],
    ["did", 66],
    ["very", 65],
    ["guildenstern", 65],
    ["which", 64],
    ["hath", 64],
    ["then", 63],
    ["speak", 63],
    ["first", 63],
    ["why", 61],
    ["must", 59],
    ["give", 59],
    ["thee", 58],
    ["their", 57],
    ["i\'ll", 57],
    ["should", 56],
    ["out", 56],
    ["make", 56],
    ["where", 55],
    ["when", 55],
    ["upon", 55],
    ["such", 55],
    ["am", 55],
    ["some", 54],
    ["say", 54],
    ["here", 54],
    ["man", 52],
    ["too", 51],
    ["than", 51],
    ["father", 51],
    ["an", 51],
    ["much", 49],
    ["these", 48],
    ["think", 47],
    ["she", 47],
    ["clown", 47],
    ["one", 46],
    ["marcellus", 46],
    ["see", 45],
    ["time", 44],
    ["had", 44],
    ["who", 43],
    ["heaven", 43],
    ["yet", 42],
    ["tell", 42],
    ["thus", 41],
    ["own", 38],
    ["mother", 38],
    ["exit", 38],
    ["up", 37],
    ["play", 37],
    ["nor", 37],
    ["look", 37],
    ["death", 37],
    ["ay", 37],
    ["take", 35],
    ["night", 35],
    ["exeunt", 35],
    ["soul", 34],
    ["can", 34],
    ["hear", 33],
    ["again", 33],
    ["osric", 32],
    ["mine", 32],
    ["might", 32],
    ["life", 32],
    ["into", 32],
    ["could", 32],
    ["whose", 31],
    ["indeed", 31],
    ["god", 31],
    ["ghost", 31],
    ["dead", 31],
    ["nothing", 30],
    ["made", 30],
    ["pray", 29],
    ["heart", 29],
    ["down", 29],
    ["cannot", 29],
    ["barnardo", 29],
    ["leave", 28],
    ["dear", 28],
    ["both", 28],
    ["been", 28],
    ["within", 27],
    ["were", 27],
    ["nature", 27],
    ["matter", 27],
    ["hold", 27],
    ["doth", 27],
    ["sweet", 26],
    ["never", 26],
    ["head", 26],
    ["great", 26],
    ["away", 26],
    ["part", 25],
    ["nay", 25],
    ["does", 25],
    ["world", 24],
    ["though", 24],
    ["scene", 24],
    ["put", 24],
    ["itself", 24],
    ["comes", 24],
    ["true", 23],
    ["show", 23],
    ["second", 23],
    ["eyes", 23],
    ["even", 23],
    ["against", 23],
    ["set", 22],
    ["seen", 22],
    ["madness", 22],
    ["done", 22],
    ["call", 22],
    ["two", 21],
    ["those", 21],
    ["off", 21],
    ["mad", 21],
    ["himself", 21],
    ["follow", 21],
    ["fair", 21],
    ["denmark", 21],
    ["day", 21],
    ["before", 21],
    ["words", 20],
    ["without", 20],
    ["till", 20],
    ["still", 20],
    ["poor", 20],
    ["player", 20],
    ["old", 20],
    ["means", 20],
    ["hand", 20],
    ["friends", 20],
    ["fortinbras", 20],
    ["fear", 20],
    ["england", 20],
    ["earth", 20],
    ["son", 19],
    ["players", 19],
    ["once", 19],
    ["blood", 19],
    ["believe", 19],
    ["act", 19],
    ["there\'s", 18],
    ["since", 18],
    ["reynaldo", 18],
    ["many", 18],
    ["makes", 18],
    ["little", 18],
    ["keep", 18],
    ["father\'s", 18],
    ["else", 18],
    ["about", 18],
    ["young", 17],
    ["welcome", 17],
    ["thoughts", 17],
    ["thing", 17],
    ["noble", 17],
    ["long", 17],
    ["is\'t", 17],
    ["gentleman", 17],
    ["find", 17],
    ["farewell", 17],
    ["faith", 17],
    ["end", 17],
    ["ear", 17],
    ["cause", 17],
    ["art", 17],
    ["youth", 16],
    ["watch", 16],
    ["use", 16],
    ["that\'s", 16],
    ["sword", 16],
    ["stand", 16],
    ["speech", 16],
    ["question", 16],
    ["marry", 16],
    ["majesty", 16],
    ["hast", 16],
    ["tongue", 15],
    ["therefore", 15],
    ["th", 15],
    ["state", 15],
    ["something", 15],
    ["said", 15],
    ["room", 15],
    ["rest", 15],
    ["live", 15],
    ["last", 15],
    ["eye", 15],
    ["drink", 15],
    ["castle", 15],
    ["between", 15],
    ["another", 15],
    ["yourself", 14],
    ["thine", 14],
    ["spirit", 14],
    ["sings", 14],
    ["reason", 14],
    ["o\'er", 14],
    ["mark", 14],
    ["lady", 14],
    ["heard", 14],
    ["has", 14],
    ["grief", 14],
    ["grace", 14],
    ["gone", 14],
    ["goes", 14],
    ["dost", 14],
    ["daughter", 14],
    ["better", 14],
    ["bear", 14],
    ["answer", 14],
    ["after", 14],
    ["while", 13],
    ["we\'ll", 13],
    ["virtue", 13],
    ["sent", 13],
    ["sense", 13],
    ["ourselves", 13],
    ["other", 13],
    ["none", 13],
    ["murder", 13],
    ["ho", 13],
    ["haste", 13],
    ["gertrude", 13],
    ["friend", 13],
    ["form", 13],
    ["ever", 13],
    ["duty", 13],
    ["word", 12],
    ["what\'s", 12],
    ["voice", 12],
    ["together", 12],
    ["sleep", 12],
    ["saw", 12],
    ["same", 12],
    ["revenge", 12],
    ["remember", 12],
    ["purpose", 12],
    ["please", 12],
    ["oft", 12],
    ["norway", 12],
    ["myself", 12],
    ["mind", 12],
    ["madam", 12],
    ["kind", 12],
    ["help", 12],
    ["hands", 12],
    ["grave", 12],
    ["gentlemen", 12],
    ["further", 12],
    ["fit", 12],
    ["fire", 12],
    ["ere", 12],
    ["e\'en", 12],
    ["bring", 12],
    ["being", 12],
    ["any", 12],
    ["air", 12],
    ["wind", 11],
    ["way", 11],
    ["villain", 11],
    ["tonight", 11],
    ["thousand", 11],
    ["thought", 11],
    ["things", 11],
    ["stay", 11],
    ["right", 11],
    ["passion", 11],
    ["name", 11],
    ["men", 11],
    ["in\'t", 11],
    ["honest", 11],
    ["ha", 11],
    ["full", 11],
    ["free", 11],
    ["foul", 11],
    ["fortune", 11],
    ["far", 11],
    ["face", 11],
    ["each", 11],
    ["deed", 11],
    ["business", 11],
    ["best", 11],
    ["bed", 11],
    ["aside", 11],
    ["alas", 11],
    ["\'twere", 11],
    ["work", 10],
    ["thanks", 10],
    ["takes", 10],
    ["skull", 10],
    ["seem", 10],
    ["pyrrhus", 10],
    ["phrase", 10],
    ["peace", 10],
    ["news", 10],
    ["neither", 10],
    ["near", 10],
    ["memory", 10],
    ["mean", 10],
    ["lie", 10],
    ["let\'s", 10],
    ["late", 10],
    ["honour", 10],
    ["hell", 10],
    ["he\'s", 10],
    ["ground", 10],
    ["given", 10],
    ["francisco", 10],
    ["fine", 10],
    ["excellent", 10],
    ["ears", 10],
    ["doubt", 10],
    ["command", 10],
    ["awhile", 10],
    ["aught", 10],
    ["alone", 10],
    ["almost", 10],
    ["action", 10]
];

function findTotalFrequencyCount() {
    let totalFrequencyCountCounter = 0; // holder variable that starts at 0 so if function that is set to 0 everytime function is run
    for (k = 0; k < words.length; k++) { // loops through words array
        totalFrequencyCountCounter += words[k][1]; // adds frequency of every entry in word array to counter
        // console.log(k)
    };
    return totalFrequencyCountCounter; // returns amount of words found
};

// let totalFrequencyCount = findTotalFrequencyCount(); // total amount of words in frequency
let generationAmount = 7; // amount of words generated
let output = document.getElementById("output"); // sets output to output on UI

function generateParagraph() { // generates the string of words
    let finalWord = ""; // placeholder string 
    for (i = 0; i < generationAmount; i++) { // loops through based on generation amount
        let wordFinder = Math.ceil(Math.random() * findTotalFrequencyCount()); // generates a number between 1 and total sum of frequency
        for (j = 0; j < words.length; j++) { // loops through array
            wordFinder -= words[j][1]; // for each instance in array subtracts the frequency from the generated word
            if (wordFinder <= 0) { // if the generated word is less than 1 after subtraction
                if ((generationAmount - 1) === i) { // if last generated word
                    finalWord += words[j][0] + "."; // adds final word to string with period 
                } else { // for every other case
                    finalWord += words[j][0] + " "; // adds word to string
                };
                j = words.length; // ends loop
            };
            console.log(finalWord); // debugs to show growth of string
        };
    };
    return finalWord; // returns final string of words
};

function amendArray() { // when "Configure" button is clicked
    let chosen = Number(prompt("What do you Want to Edit? \n(1) Possible List of Words \n(2) Amount of Words per Generation \n(3) Exit")); // opens dialog box
    if (chosen === 1) { // if "Possibe list of words" is chosen
        let insertedWord = prompt("What Word do you Want to be Added to the List of Possible Words?"); // prompts for word you want to add to list
        let insertedFrequency = Number(prompt("How Many Copies of the Word do you Want to put in the List? \n(Total Amount of Words in List : " + findTotalFrequencyCount() + ")")); // prompts for frequency number of word for the array
        words.push([insertedWord, insertedFrequency]); // adds to array
    } else if (chosen === 2) { // if "Amount of words per generation" is chosen
        generationAmount = Number(prompt("How Many Words do you Want to be Generated per Unique Generation?")); // prompts generation amount length
    };
};

function generateText() { // when "Generate Text" button is clicked
    output.innerHTML = generateParagraph(); // finds string and sets UI to that string
};

// end